@charset "UTF-8";
@font-face {
  font-family: "Roboto";
  src: url(../fonts/Roboto-Regular.woff2) format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url(../fonts/Roboto-Medium.woff2) format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url(../fonts/Roboto-Bold.woff2) format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url(../fonts/Roboto-Italic.woff2) format("woff2");
  font-weight: 400;
  font-style: italic;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url(../fonts/Roboto-MediumItalic.woff2) format("woff2");
  font-weight: 500;
  font-style: italic;
  font-display: swap;
}
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
  /**
    Плавный скролл
   */
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Убирает серую подсветку при тапе на мобильных устройствах (iOS/Android)
 */
button {
  -webkit-tap-highlight-color: transparent;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
/*@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}*/
.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}
@media (max-width: 767px) {
  .container {
    padding-inline: 30px;
  }
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 767px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .visible-mobile {
    display: none !important;
  }
}

:root {
  --color-green: #007765;
  --color-light: #FFFFFF;
  --color-gray: #EEEEEE;
  --color-dark-gray: #333333;
  --font-family-base: "Roboto", sans-serif;
  --container-width: 1219px;
  --container-padding-x: 55px;
  --header-height: 84px;
  --section-padding-top: 48px;
  --section-padding-bottom: 92px;
  --transition-duration: 0.2s;
}

body {
  font-family: var(--font-family-base);
  scroll-behavior: smooth;
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

p {
  font-size: 32px;
}
@media (max-width: 767px) {
  p {
    font-size: 26px;
  }
}

.title {
  font-size: 64px;
  color: var(--color-green);
  text-align: center;
}
.title:not(:last-child) {
  margin-bottom: 16px;
}
@media (max-width: 767px) {
  .title {
    font-size: 48px;
  }
}

.burger-button {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 48px;
  aspect-ratio: 1;
  position: relative;
  border-radius: 10px;
}
@media (hover: hover) {
  .burger-button:hover {
    opacity: 0.7;
  }
}
@media (hover: none) {
  .burger-button:active {
    opacity: 0.7;
  }
}
.burger-button::after {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  width: 50%;
  height: 2px;
  background-color: var(--color-light);
  border-radius: 5px;
  box-shadow: 0 -8px var(--color-light), 0 8px var(--color-light);
}

.mobile-menu {
  width: 100%;
  height: 100%;
  margin: 0;
  border: none;
  padding: 14px 20px;
  background-color: var(--color-green);
}
.mobile-menu:modal {
  max-width: 100%;
  max-height: 100%;
}
.mobile-menu__close {
  display: flex;
  justify-content: end;
}
.mobile-menu__close-button {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 48px;
  aspect-ratio: 1;
  position: relative;
  border-radius: 10px;
}
@media (hover: hover) {
  .mobile-menu__close-button:hover {
    opacity: 0.7;
  }
}
@media (hover: none) {
  .mobile-menu__close-button:active {
    opacity: 0.7;
  }
}
.mobile-menu__close-button::before, .mobile-menu__close-button::after {
  content: "";
  position: absolute;
  top: 60%;
  right: 40px;
  width: 70%;
  height: 2px;
  background-color: var(--color-light);
  border-radius: 5px;
}
.mobile-menu__close-button::before {
  rotate: 45deg;
}
.mobile-menu__close-button::after {
  rotate: -45deg;
}
.mobile-menu__list {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  row-gap: 30px;
  min-height: 80vh;
}
.mobile-menu__link {
  font-size: 24px;
  color: var(--color-light);
}

.header {
  position: sticky;
  top: 0;
  z-index: 1000;
  background-color: var(--color-green);
  padding-block: 20px;
}
.header__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  row-gap: 20px;
}
.header__menu-list {
  display: flex;
  -moz-column-gap: 24px;
       column-gap: 24px;
  font-weight: 500;
}
.header__menu-item {
  position: relative;
  color: var(--color-light);
}
.header__menu-item:not(:last-child)::after {
  content: "";
  position: absolute;
  right: -12px;
  top: 50%;
  transform: translateY(-50%);
  width: 2px;
  height: 20px;
  background-color: currentColor;
}
.header__menu-link {
  font-size: 24px;
  height: 40px;
}
@media (hover: hover) {
  .header__menu-link:hover {
    color: var(--color-gray);
  }
}
@media (hover: none) {
  .header__menu-link:active {
    color: var(--color-gray);
  }
}

.section {
  position: relative;
  overflow: hidden;
  padding-top: var(--section-padding-top);
  padding-bottom: var(--section-padding-bottom);
  background-color: var(--color-gray);
}
@media (max-width: 767px) {
  .section {
    padding-top: 32px;
    padding-bottom: 64px;
  }
}
.section--light {
  background-color: var(--color-light);
}
.section--with-bg {
  padding-block: 0;
  background: none;
}
.section--with-bg::before {
  content: "";
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 100vw;
  height: 100%;
  background: center/cover no-repeat;
  z-index: -1;
}
.section--bg-hero::before {
  background-image: url("../images/hero-bg.jpg");
}
.section--bg-together::before {
  background-image: url("../images/together-bg.jpg");
}
.section[id] {
  scroll-margin-top: var(--header-height);
  overflow: visible;
}

.hero {
  padding-block: 160px;
}
.hero__title {
  font-size: 72px;
  font-weight: 500;
  color: var(--color-light);
  text-align: center;
}
@media (max-width: 767px) {
  .hero__title {
    font-size: 50px;
  }
}

.together {
  padding-block: 128px;
  display: flex;
  justify-content: center;
  align-items: center;
}
@media (max-width: 767px) {
  .together {
    padding-block: 80px;
  }
}
.together__title {
  max-width: 893px;
  font-size: 48px;
  font-weight: 500;
  font-style: italic;
  color: var(--color-light);
  text-align: center;
}
@media (max-width: 767px) {
  .together__title {
    font-size: 32px;
  }
}

.ppc__with-logo {
  display: flex;
  -moz-column-gap: 48px;
       column-gap: 48px;
  margin-bottom: 40px;
}
@media (max-width: 767px) {
  .ppc__with-logo {
    flex-direction: column;
    row-gap: 30px;
    margin-bottom: 24px;
  }
}
.ppc__logo {
  width: 115px;
  height: 115px;
  flex-shrink: 0;
  align-self: center;
}

.team__title:not(:last-child) {
  margin-bottom: 32px;
}
.team__list {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 30px;
}
@media (max-width: 1023px) {
  .team__list {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (max-width: 767px) {
  .team__list {
    grid-template-columns: 1fr;
    row-gap: 40px;
  }
}
.team__item {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.team__image {
  margin-bottom: 12px;
}
.team__name {
  font-size: 24px;
  font-weight: 700;
  color: var(--color-green);
}
.team__post {
  font-size: 18px;
  font-style: italic;
}

.footer {
  background-color: var(--color-dark-gray);
}
.footer__inner {
  display: flex;
  justify-content: center;
  align-items: center;
  padding-top: var(--section-padding-top);
  padding-bottom: 64px;
}
.footer__copyright {
  max-width: 540px;
  font-size: 18px;
  color: var(--color-light);
  text-align: center;
}/*# sourceMappingURL=styles.css.map */